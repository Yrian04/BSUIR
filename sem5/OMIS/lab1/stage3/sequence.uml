@startuml
title Платформа для проведения онлайн-конференций и вебинаров

actor Пользователь as user
actor Ведущий as host
boundary Интерфейс as interface
control Контроллер as controller
entity Модель as model
entity Мероприятие as event

activate user
== Создание мероприятия ==

user ->> interface ++: Зайти в раздел “создание мероприятия”
interface -> controller ++: Запрос на отображение\nформы создания мероприятия
return Отобразить форму создания мероприятия
return Отобразить форму создания мероприятия

user ->> interface ++: Ввести название, дату, время, настройки приватности
interface -> controller ++: Передать данные о мероприятии
controller -> model ++: Сохранить данные о мероприятие
model -> model: Сгенерировать код доступа
model -> event **: Создать мероприятие
return Подтверждение о создании мероприятия
return Мероприятие создано,\nпользователь становится ведущим,\nотобразить код доступа
return Мероприятие создано,\nпользователь становится ведущим,\nотобразить код доступа

activate host
opt Настройки мероприятия
    host ->> interface ++: Перейти в раздел “настройки мероприятия”
    interface -> controller ++: Запрос на отображение настроек трансляции
    return Отобразить настройки трансляции
    return Отобразить настройки трансляции

    host ->> interface ++: Настроить параметры (качество видео, FPS)
    interface -> controller ++: Передать настройки трансляции
    controller -> model ++: Сохранить настройки трансляции
    model -> event ++: Изменить настройки трансляции
    return Подтверждение настроек
    return Подтверждение настроек
    return Подтверждение сохраненных настроек
    return Подтверждение сохраненных настроек
end

== Присоединение к мероприятию ==
user ->> interface ++: Зайти в раздел “присоединиться к мероприятию”
interface -> controller ++: Запрос на отображение формы ввода кода
return Отобразить форму ввода кода
return Отобразить форму ввода кода

user ->> interface ++: Ввести код мероприятия и имя
interface -> controller ++: Передать код и имя пользователя
controller -> model ++: Проверить код мероприятия
alt 
    return Код вереный
    opt Приватное мероприятие
        controller -> interface --: Уведомить о запросе на подключение
        interface -> host --: Запрос на подключение
        alt
            host -> interface ++: Отклонить запрос
            interface -> controller ++: Передать решение ведущего
            return Подключение отклонено
            interface --> user --: Сообщить
        else
            host -> interface ++: Одобрить запрос
            interface -> controller ++: Передать решение ведущего
        end
    end
    opt
        controller -> model ++: Подключить пользователя
        return Подключение успешно
        controller -> interface --: Подключение к мероприятию, пользователь становится зрителем
        interface -> user --: Подключение к мероприятию, пользователь становится зрителем
    end
else Код неверный
    activate model
    model --> controller -- : Код неверный
    controller --> interface -- : Вернуть к состоянию “присоединиться к мероприятию”
    interface --> user -- : Вернуть к состоянию “присоединиться к мероприятию”
end

== Проведение мероприятия ==

opt Чат
    user ->> interface ++: Перейти в раздел “чат”
    interface -> controller ++ : Запрос на отображение чата
    return Отобразить чат
    return Отобразить чат

    user ->> interface ++: Отправить сообщение
    interface -> controller ++: Передать сообщение
    controller -> model ++: Сохранить сообщение
    model -> event ++: Сохрание
    return Сохранение успешно
    return Сообщение сохранено
    return Сообщение отображается в чате
    return Сообщение отображается в чате
end

opt Удаление сообщения
    host ->> interface ++: Удалить сообщение зрителя
    interface -> controller ++: Запрос на удаление сообщения
    controller -> model ++: Удалить сообщение
    model -> event ++: Удаление
    return Удаление успешно
    return Сообщение удалено
    return Уведомление о том, что сообщение удалено
    return Уведомление о том, что сообщение удалено
end

opt Просмотр участников
    user ->> interface ++: Перейти в раздел “участники”
    interface -> model ++: Запросить участников мероприятия
    model -> event ++: Взять участников
    return Список участников
    return Список участников
    return Список участников
    opt Удаление зрителя
        host ->> interface ++: Удалить зрителя
        interface -> controller ++: Запрос на удаление зрителя
        controller -> model ++: Удалить зрителя
        model -> event ++: Удаление
   	return Удаление успешно
        return Зритель удален
        return Уведомление о том, что зритель удален
        return Уведомление о том, что зритель удален
    end
end

== Окончание мероприятия ==
    host -> interface ++: Окончить мероприятие
    interface -> controller ++: Окончить мероприятие
    controller -> model ++: Удалить мероприятие
    model -> event !!: Удаление
    return Мероприятие удалено
    return Мероприятие закончено
    return Мероприятие закончено

deactivate interface
deactivate host
@enduml

